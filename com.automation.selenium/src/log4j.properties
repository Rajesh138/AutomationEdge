#Root logger option \u2013 This section will help to log the system generated logs in Selenium.txt file

log4j.rootLogger=debug,file
#Here debug is the Logger level and file is used as an identifier

log4j.appender.file=org.apache.log4j.RollingFileAppender
#Here Appender type is defined as RollingFileAppender

log4j.appender.file.File=C:\\Setups\\Logs\\Selenium.txt
#Here the location of file is mentioned where the system generated logs would get saved

log4j.appender.file.maxFileSize=5000KB
#maxFileSize denotes that after every 5000KB a new file will be created, means a single file will not save data more than 5000KB

log4j.appender.file.maxBackupIndex=1
#maxBackupIndex defines that how many backup files will be saved

log4j.appender.file.layout=org.apache.log4j.PatternLayout
#layout is used to set the format of the output file

log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L \u2013 %m%n
#conversionpattern is used to set the conversion type.

log4j.appender.file.Append=false
#do not append the old file. Create a new log file everytime
#Application Logs \u2013 This section will help to log the information generated by manual commands in code

log4j.logger.devpinoyLogger=DEBUG, dest1
#Here debug is the Logger level and file is used as an identifier. \u201CdevpinoyLogger\u201D string will be passed to getLogger method of Logger class

log4j.appender.dest1=org.apache.log4j.RollingFileAppender

log4j.appender.dest1.maxFileSize=5000KB
log4j.appender.dest1.maxBackupIndex=3

log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
log4j.appender.dest1.layout.ConversionPattern=%d{dd/MM/yyyy HH:mm:ss} %c %m%n

log4j.appender.dest1.File=C:\\Users\\Dharmendra\\Toolsqa\\Bookshopee\\src\\automationframework\\test.logs
#Here the location of file is mentioned where the information generated by manual commands in code will get saved.

log4j.appender.dest1.Append=false
#do not append the old file. Create a new log file everytime